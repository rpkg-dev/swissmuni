[{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://rpkg.dev/swissmuni/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://rpkg.dev/swissmuni/TODO.html","id":null,"dir":"","previous_headings":"","what":"TODOs","title":"TODOs","text":"Add progress indicator / spinner fetching op Add vignette real-life usage examples maybe write blog post based (published rOpenGov). Rename (tidy) remaining column names returned API (far HR_* columns can renamed). get necessary documentation?","code":""},{"path":"https://rpkg.dev/swissmuni/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Salim Brüggemann. Author, maintainer.","code":""},{"path":"https://rpkg.dev/swissmuni/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brüggemann S (2022). swissmuni: Download Municipality Data Swiss Federal Statistical Office's Web Services. https://rpkg.dev/swissmuni, https://gitlab.com/salim_b/r/pkgs/swissmuni.","code":"@Manual{,   title = {swissmuni: Download Municipality Data from the Swiss Federal Statistical Office's Web Services},   author = {Salim Brüggemann},   year = {2022},   note = {https://rpkg.dev/swissmuni, https://gitlab.com/salim_b/r/pkgs/swissmuni}, }"},{"path":"https://rpkg.dev/swissmuni/index.html","id":"swissmuni-download-municipality-data-from-the-swiss-federal-statistical-offices-web-services","dir":"","previous_headings":"","what":"Download Municipality Data from the Swiss Federal Statistical\n    Office's Web Services","title":"Download Municipality Data from the Swiss Federal Statistical\n    Office's Web Services","text":"swissmuni provides access Swiss municipality snapshots, congruences, mutations spatial classifications web services provided Swiss Federal Statistical Office (FSO). accessed web services part FSO’s Statistical Metadata System (SMS)1. Note ’s also official web application available access Swiss municipality data.","code":""},{"path":"https://rpkg.dev/swissmuni/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Municipality Data from the Swiss Federal Statistical\n    Office's Web Services","text":"install latest development version swissmuni, run following R:","code":"if (!(\"remotes\" %in% rownames(installed.packages()))) {   install.packages(pkgs = \"remotes\",                    repos = \"https://cloud.r-project.org/\") }  remotes::install_gitlab(repo = \"salim_b/r/pkgs/swissmuni\")"},{"path":"https://rpkg.dev/swissmuni/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Download Municipality Data from the Swiss Federal Statistical\n    Office's Web Services","text":"(function) reference found .","code":""},{"path":[]},{"path":"https://rpkg.dev/swissmuni/index.html","id":"r-markdown-format","dir":"","previous_headings":"Development","what":"R Markdown format","title":"Download Municipality Data from the Swiss Federal Statistical\n    Office's Web Services","text":"package’s source code written R Markdown file format facilitate practices commonly referred literate programming. allows actual code freely mixed explanatory supplementary information expressive Markdown format instead rely # comments . .gen.R suffixed R source code found R/ generated respective R Markdown counterparts Rmd/ using pkgpurl::purl_rmd()2. Always make changes .Rmd files – never .R files – run pkgpurl::purl_rmd() regenerate R source files.","code":""},{"path":"https://rpkg.dev/swissmuni/index.html","id":"coding-style","dir":"","previous_headings":"Development","what":"Coding style","title":"Download Municipality Data from the Swiss Federal Statistical\n    Office's Web Services","text":"package borrows lot Tidyverse design philosophies. R code adheres principles specified Tidyverse Design Guide wherever possible formatted according Tidyverse Style Guide (TSG) following exceptions: Line width limited 160 characters, double limit proposed TSG (80 characters ridiculously little given today’s high-resolution wide screen monitors). Usage magrittr’s compound assignment pipe-operator %<>% desirable3. Usage R’s right-hand assignment operator -> allowed4. R source code split several files suggested TSG instead (far possible) kept single file Rmd/swissmuni.Rmd well-structured thanks Markdown support. far possible, deviations TSG plus additional restrictions formally specified lintr configuration file .lintr, lintr can used right away check formatting issues:","code":"pkgpurl::lint_rmd()"},{"path":"https://rpkg.dev/swissmuni/index.html","id":"see-also","dir":"","previous_headings":"","what":"See also","title":"Download Municipality Data from the Swiss Federal Statistical\n    Office's Web Services","text":"Official municipality data web application Swiss Federal Statistical Office (FSO)","code":""},{"path":"https://rpkg.dev/swissmuni/reference/api_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Get allowed API URL parameters — api_params","title":"Get allowed API URL parameters — api_params","text":"Parses API's Web Services Description Language (WSDL) file determine possible URL parameters.","code":""},{"path":"https://rpkg.dev/swissmuni/reference/api_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get allowed API URL parameters — api_params","text":"","code":"api_params(   type = c(\"snapshots\", \"congruences\", \"mutations\", \"classifications\") )"},{"path":"https://rpkg.dev/swissmuni/reference/api_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get allowed API URL parameters — api_params","text":"type API endpoint.","code":""},{"path":"https://rpkg.dev/swissmuni/reference/api_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get allowed API URL parameters — api_params","text":"tibble.","code":""},{"path":"https://rpkg.dev/swissmuni/reference/api_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get allowed API URL parameters — api_params","text":"","code":"# get all URL params of all 3 API endpoints: endpoints <- c(\"snapshots\",                \"congruences\",                \"mutations\",                \"classifications\")  endpoints |>   purrr::map(swissmuni::api_params) |>   rlang::set_names(nm = endpoints) #> $snapshots #> # A tibble: 5 × 4 #>   minOccurs name        nillable type      #>   <chr>     <chr>       <chr>    <chr>     #> 1 0         format      true     xs:string #> 2 0         escapeChars true     xs:string #> 3 0         startPeriod true     xs:string #> 4 0         endPeriod   true     xs:string #> 5 0         useBfsCode  true     xs:string #>  #> $congruences #> # A tibble: 7 × 4 #>   minOccurs name                     nillable type      #>   <chr>     <chr>                    <chr>    <chr>     #> 1 0         format                   true     xs:string #> 2 0         escapeChars              true     xs:string #> 3 0         startPeriod              true     xs:string #> 4 0         endPeriod                true     xs:string #> 5 0         includeUnmodified        true     xs:string #> 6 0         includeTerritoryExchange true     xs:string #> 7 0         useDeprecatedMethod      true     xs:string #>  #> $mutations #> # A tibble: 6 × 4 #>   minOccurs name                     nillable type      #>   <chr>     <chr>                    <chr>    <chr>     #> 1 0         format                   true     xs:string #> 2 0         escapeChars              true     xs:string #> 3 0         startPeriod              true     xs:string #> 4 0         endPeriod                true     xs:string #> 5 0         includeTerritoryExchange true     xs:string #> 6 0         useDeprecatedMethod      true     xs:string #>  #> $classifications #> # A tibble: 7 × 4 #>   minOccurs name             nillable type      #>   <chr>     <chr>            <chr>    <chr>     #> 1 0         format           true     xs:string #> 2 0         escapeChars      true     xs:string #> 3 0         startPeriod      true     xs:string #> 4 0         endPeriod        true     xs:string #> 5 0         useBfsCode       true     xs:string #> 6 0         labelLanguages   true     xs:string #> 7 0         oracleCompatible true     xs:string #>"},{"path":"https://rpkg.dev/swissmuni/reference/classifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Get spatial classifications of municipalities — classifications","title":"Get spatial classifications of municipalities — classifications","text":"Returns tibble wide range spatial classifications Swiss municipalities, .. language region, size municipality degree agglomeration/urbanization.","code":""},{"path":"https://rpkg.dev/swissmuni/reference/classifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get spatial classifications of municipalities — classifications","text":"","code":"classifications(   start_date = NULL,   end_date = NULL,   historicized_code = FALSE,   name_type = c(\"ID\", \"en\", \"de\", \"fr\", \"it\"),   use_cache = TRUE,   cache_lifespan = \"1 day\" )"},{"path":"https://rpkg.dev/swissmuni/reference/classifications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get spatial classifications of municipalities — classifications","text":"start_date begin period data covers. date character scalar format \"YYYY-MM-DD\". end_date end period data covers. date character scalar format \"YYYY-MM-DD\". historicized_code default, FSO commune number returned. Set TRUE order get historicization number instead. name_type column name type returned. Defaults column IDs returned web service. set language code, columns starting ID HR_ named full label respective language instead. use_cache Return cached results possible. FALSE, results always newly fetched regardless cache_lifespan. cache_lifespan duration cached results refreshed (.e. newly fetched). valid lubridate duration. relevant use_cache = TRUE. Defaults 1 day (24 hours).","code":""},{"path":"https://rpkg.dev/swissmuni/reference/classifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get spatial classifications of municipalities — classifications","text":"tibble.","code":""},{"path":"https://rpkg.dev/swissmuni/reference/classifications.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get spatial classifications of municipalities — classifications","text":"classifications multiple column IDs (e.g. HR_ARBREG2000_L2 HR_TYPMSR2000_L2 contain spatial mobility regions). name_type set language code, column duplicates given name suffix \" (⎘)\".","code":""},{"path":"https://rpkg.dev/swissmuni/reference/classifications.html","id":"fso-commune-number-vs-historicization-number","dir":"Reference","previous_headings":"","what":"FSO commune number vs. historicization number","title":"Get spatial classifications of municipalities — classifications","text":"default, FSO commune number returned. can set historicized_code = TRUE get historicization number instead. Details differences can found PDF (German). translation relevant paragraph (p. 2): ― mutation processes cantonal, district municipal level cause changes official register Swiss municipalities. -called historicization number uniquely identifies entries official commune register changed, “deleted” added result mutation processes. contrast FSO commune number district number, historicization number unique within database defines state communes districts certain period time. mutation numbers, type inclusion revocation date inclusion revocation used fully describe individual mutation events “Municipalities” “Districts” tables. mutation number identifies individual mutation events may affect one entries. historicization number replace existing municipality district numbers. used computer-aided mapping various states mutation processes official commune register districts. ―","code":""},{"path":"https://rpkg.dev/swissmuni/reference/classifications.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get spatial classifications of municipalities — classifications","text":"","code":"swissmuni::classifications(start_date = lubridate::today(),                            end_date = lubridate::today(),                            name_type = \"de\",                            use_cache = FALSE) #> # A tibble: 2,145 × 23 #>    Ident…¹ Name  CODE_…² Kanto…³ Histo…⁴ Agglo…⁵ Agglo…⁶ Agglo…⁷ Arbei…⁸ Arbei…⁹ Urban…˟ Funkt…˟ Erwei…˟ Städt…˟ Gemei…˟ Gemei…˟ Bergg…˟ Gross…˟ Raum …˟ Sprac…˟ #>      <int> <chr>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int>   <int> #>  1   10009 Vill…    4122      19   10023       0       0       0      12   12010       2       0       0       3      23     236       0       3       5       1 #>  2   10078 Vion…    6158      23   10013       0       0       0       2    2040       3       0       0       2      22     226       1       1       5       2 #>  3   10157 Spei…    3023      15   10098    3203       3    3203      15   15050       2 3203960       0       2      22     227       1       5       4       1 #>  4   10159 Zwis…    6011      23   10035    6002       5    6002       7    7090       3       0       0       3      23     237       1       1       4       1 #>  5   10162 Vill…    2228      10   10104    2196       3    2196       4    4030       2       0       0       1      12     122       0       2       2       2 #>  6   10165 Vill…    2230      10   10104    2196       3    2196       4    4030       3       0       0       3      23     235       0       2       4       2 #>  7   10242 Wila      181       1   10076       0       0       0      12   12040       3  261960       0       2      22     226       0       4       5       1 #>  8   10268 Wil …      71       1   10081     261       1     261      12   12032       3  261960       0       3      23     236       0       4       4       1 #>  9   10275 Wett…    4045      19   10025    4021       3    4021      12   12010       2  261960       0       1      12     123       0       3       2       1 #> 10   10277 Wetz…     121       1   10079     261       1     261      12   12037       2  261960       0       1      11     112       0       4       3       1 #> # … with 2,135 more rows, 3 more variables: `Statistische Städte 2012` <int>, INSCRIPTION <int>, ABBREV <chr>, and abbreviated variable names ¹​Identifier, #> #   ²​CODE_OFS, ³​`Kanton (2022-01-01)`, ⁴​`Historisiertes Bezirkverzeichnis der Schweiz (2022-01-01)`, ⁵​`Agglomerationen 2012`, #> #   ⁶​`Agglomerationsgrössenklasse 2012`, ⁷​`Agglomerationen 2012 ⎘`, ⁸​`Arbeitsmarktgrossregionen 2018`, ⁹​`Arbeitsmarktregionen 2018`, #> #   ˟​`Urbanisierungsgrad 2011 (DEGURBA) - eurostat 2011`, ˟​`Funktionale städtische Gebiete 2014 (FUA eurostat)`, #> #   ˟​`Erweiterte Städte 2011 (Greater cities eurostat)`, ˟​`Städtische / Ländliche Gebiete`, ˟​`Gemeindetypologie 2012 (9 Typen)`, #> #   ˟​`Gemeindetypologie 2012 (25 Typen)`, ˟​Berggebiete, ˟​`Grossregionen der Schweiz`, ˟​`Raum mit städtischem Charakter 2012`, ˟​`Sprachgebiete 2016`"},{"path":"https://rpkg.dev/swissmuni/reference/congruences.html","id":null,"dir":"Reference","previous_headings":"","what":"Get municipality congruences — congruences","title":"Get municipality congruences — congruences","text":"Returns tibble congruence data Swiss municipalities. data indicates existing municipality start_date municipality/municipalities corresponds end_date.","code":""},{"path":"https://rpkg.dev/swissmuni/reference/congruences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get municipality congruences — congruences","text":"","code":"congruences(   start_date = NULL,   end_date = NULL,   incl_unmodified = TRUE,   incl_territory_exchange = FALSE,   use_cache = TRUE,   cache_lifespan = \"1 day\" )"},{"path":"https://rpkg.dev/swissmuni/reference/congruences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get municipality congruences — congruences","text":"start_date begin period data covers. date character scalar format \"YYYY-MM-DD\". end_date end period data covers. date character scalar format \"YYYY-MM-DD\". incl_unmodified Include municipalities changes occurred defined period. incl_territory_exchange Include information (additional rows) territory exchanges within municipalities. use_cache Return cached results possible. FALSE, results always newly fetched regardless cache_lifespan. cache_lifespan duration cached results refreshed (.e. newly fetched). valid lubridate duration. relevant use_cache = TRUE. Defaults 1 day (24 hours).","code":""},{"path":"https://rpkg.dev/swissmuni/reference/congruences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get municipality congruences — congruences","text":"tibble.","code":""},{"path":"https://rpkg.dev/swissmuni/reference/congruences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get municipality congruences — congruences","text":"","code":"swissmuni::congruences(start_date = lubridate::today(),                        end_date = lubridate::today(),                        cache_lifespan = \"6 hours\") #> # A tibble: 2,145 × 12 #>    InitialHistoricalCode InitialCode InitialName         InitialParentHistoricalCode InitialParentName   Initi…¹ Termi…² Termi…³ Termi…⁴ Termi…⁵ Termi…⁶ Termi…⁷ #>                    <int>       <int> <chr>                                     <int> <chr>                 <int>   <int>   <int> <chr>     <int> <chr>     <int> #>  1                 10009        4122 Villnachern                               10023 Bezirk Brugg             NA   10009    4122 Villna…   10023 Bezirk…      NA #>  2                 10078        6158 Vionnaz                                   10013 District de Monthey      NA   10078    6158 Vionnaz   10013 Distri…      NA #>  3                 10157        3023 Speicher                                  10098 Bezirk Mittelland        NA   10157    3023 Speich…   10098 Bezirk…      NA #>  4                 10159        6011 Zwischbergen                              10035 Bezirk Brig              NA   10159    6011 Zwisch…   10035 Bezirk…      NA #>  5                 10162        2228 Villars-sur-Glâne                         10104 District de la Sar…      NA   10162    2228 Villar…   10104 Distri…      NA #>  6                 10165        2230 Villarsel-sur-Marly                       10104 District de la Sar…      NA   10165    2230 Villar…   10104 Distri…      NA #>  7                 10242         181 Wila                                      10076 Bezirk Pfäffikon         NA   10242     181 Wila      10076 Bezirk…      NA #>  8                 10268          71 Wil (ZH)                                  10081 Bezirk Bülach            NA   10268      71 Wil (Z…   10081 Bezirk…      NA #>  9                 10275        4045 Wettingen                                 10025 Bezirk Baden             NA   10275    4045 Wettin…   10025 Bezirk…      NA #> 10                 10277         121 Wetzikon (ZH)                             10079 Bezirk Hinwil            NA   10277     121 Wetzik…   10079 Bezirk…      NA #> # … with 2,135 more rows, and abbreviated variable names ¹​InitialStep, ²​TerminalHistoricalCode, ³​TerminalCode, ⁴​TerminalName, ⁵​TerminalParentHistoricalCode, #> #   ⁶​TerminalParentName, ⁷​TerminalStep"},{"path":"https://rpkg.dev/swissmuni/reference/mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get municipality mutations — mutations","title":"Get municipality mutations — mutations","text":"Returns tibble mutation data Swiss municipalities. data describes changes related municipalities made start_date end_date.","code":""},{"path":"https://rpkg.dev/swissmuni/reference/mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get municipality mutations — mutations","text":"","code":"mutations(   start_date = NULL,   end_date = NULL,   incl_territory_exchange = FALSE,   use_cache = TRUE,   cache_lifespan = \"1 day\" )"},{"path":"https://rpkg.dev/swissmuni/reference/mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get municipality mutations — mutations","text":"start_date begin period data covers. date character scalar format \"YYYY-MM-DD\". end_date end period data covers. date character scalar format \"YYYY-MM-DD\". incl_territory_exchange Include information (additional rows) territory exchanges within municipalities. use_cache Return cached results possible. FALSE, results always newly fetched regardless cache_lifespan. cache_lifespan duration cached results refreshed (.e. newly fetched). valid lubridate duration. relevant use_cache = TRUE. Defaults 1 day (24 hours).","code":""},{"path":"https://rpkg.dev/swissmuni/reference/mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get municipality mutations — mutations","text":"tibble.","code":""},{"path":"https://rpkg.dev/swissmuni/reference/mutations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get municipality mutations — mutations","text":"","code":"swissmuni::mutations(start_date = \"2020-01-01\",                      end_date = \"2020-06-30\",                      incl_territory_exchange = TRUE) #> # A tibble: 18 × 14 #>    MutationNumber MutationDate InitialHistoricalCode InitialCode InitialName         InitialPa…¹ Initi…² Initi…³ Termi…⁴ Termi…⁵ Termi…⁶ Termi…⁷ Termi…⁸ Termi…⁹ #>             <int> <date>                       <int>       <int> <chr>                     <int> <chr>     <int>   <int>   <int> <chr>     <int> <chr>     <int> #>  1           3920 2020-01-01                   15297         873 Kirchenthurnen            10288 Verwal…      29   16128     889 Thurnen   10288 Verwal…      21 #>  2           3920 2020-01-01                   15298         874 Lohnstorf                 10288 Verwal…      29   16128     889 Thurnen   10288 Verwal…      21 #>  3           3920 2020-01-01                   15300         876 Mühlethurnen              10288 Verwal…      29   16128     889 Thurnen   10288 Verwal…      21 #>  4           3921 2020-01-01                   15334         937 Schwendibach              10289 Verwal…      29   16129     939 Steffi…   10289 Verwal…      26 #>  5           3921 2020-01-01                   15336         939 Steffisburg               10289 Verwal…      26   16129     939 Steffi…   10289 Verwal…      26 #>  6           3922 2020-01-01                   15366         981 Niederbipp                10286 Verwal…      26   16130     981 Nieder…   10286 Verwal…      26 #>  7           3922 2020-01-01                   15378         996 Wolfisberg                10286 Verwal…      29   16130     981 Nieder…   10286 Verwal…      26 #>  8           3923 2020-01-01                   15541        1123 Altishofen                10302 Wahlkr…      26   16131    1123 Altish…   10302 Wahlkr…      26 #>  9           3923 2020-01-01                   15553        1126 Ebersecken                10302 Wahlkr…      29   16131    1123 Altish…   10302 Wahlkr…      26 #> 10           3924 2020-01-01                   13268        2111 Villaz-Saint-Pierre       10106 Distri…      29   16132    2117 Villaz    10106 Distri…      21 #> 11           3924 2020-01-01                   14513        2116 La Folliaz                10106 Distri…      29   16132    2117 Villaz    10106 Distri…      21 #> 12           3925 2020-01-01                   11633        2185 Corserey                  10104 Distri…      29   16133    2237 Prez      10104 Distri…      21 #> 13           3925 2020-01-01                   12550        2213 Noréaz                    10104 Distri…      29   16133    2237 Prez      10104 Distri…      21 #> 14           3925 2020-01-01                   13103        2221 Prez-vers-Noréaz          10104 Distri…      29   16133    2237 Prez      10104 Distri…      21 #> 15           3926 2020-01-01                   16027        3901 Chur                      10314 Region…      26   16134    3901 Chur      10314 Region…      26 #> 16           3926 2020-01-01                   16028        3926 Maladers                  10314 Region…      29   16134    3901 Chur      10314 Region…      26 #> 17           3927 2020-01-01                   14376        4114 Schinznach-Bad            10023 Bezirk…      29   16135    4095 Brugg     10023 Bezirk…      26 #> 18           3927 2020-01-01                   15387        4095 Brugg                     10023 Bezirk…      26   16135    4095 Brugg     10023 Bezirk…      26 #> # … with abbreviated variable names ¹​InitialParentHistoricalCode, ²​InitialParentName, ³​InitialStep, ⁴​TerminalHistoricalCode, ⁵​TerminalCode, ⁶​TerminalName, #> #   ⁷​TerminalParentHistoricalCode, ⁸​TerminalParentName, ⁹​TerminalStep"},{"path":"https://rpkg.dev/swissmuni/reference/snapshots.html","id":null,"dir":"Reference","previous_headings":"","what":"Get municipality snapshots — snapshots","title":"Get municipality snapshots — snapshots","text":"Returns tibble snapshots Swiss municipality data. snapshot corresponds list municipalities present least partially specified period (specified day end_date = start_date).","code":""},{"path":"https://rpkg.dev/swissmuni/reference/snapshots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get municipality snapshots — snapshots","text":"","code":"snapshots(   start_date = lubridate::today(),   end_date = start_date,   historicized_code = FALSE,   use_cache = TRUE,   cache_lifespan = \"1 day\" )"},{"path":"https://rpkg.dev/swissmuni/reference/snapshots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get municipality snapshots — snapshots","text":"start_date begin period data covers. date character scalar format \"YYYY-MM-DD\". end_date end period data covers. date character scalar format \"YYYY-MM-DD\". historicized_code default, FSO commune number returned. Set TRUE order get historicization number instead. use_cache Return cached results possible. FALSE, results always newly fetched regardless cache_lifespan. cache_lifespan duration cached results refreshed (.e. newly fetched). valid lubridate duration. relevant use_cache = TRUE. Defaults 1 day (24 hours).","code":""},{"path":"https://rpkg.dev/swissmuni/reference/snapshots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get municipality snapshots — snapshots","text":"tibble.","code":""},{"path":[]},{"path":"https://rpkg.dev/swissmuni/reference/snapshots.html","id":"fso-commune-number-vs-historicization-number","dir":"Reference","previous_headings":"","what":"FSO commune number vs. historicization number","title":"Get municipality snapshots — snapshots","text":"default, FSO commune number returned. can set historicized_code = TRUE get historicization number instead. Details differences can found PDF (German). translation relevant paragraph (p. 2): ― mutation processes cantonal, district municipal level cause changes official register Swiss municipalities. -called historicization number uniquely identifies entries official commune register changed, “deleted” added result mutation processes. contrast FSO commune number district number, historicization number unique within database defines state communes districts certain period time. mutation numbers, type inclusion revocation date inclusion revocation used fully describe individual mutation events “Municipalities” “Districts” tables. mutation number identifies individual mutation events may affect one entries. historicization number replace existing municipality district numbers. used computer-aided mapping various states mutation processes official commune register districts. ―","code":""},{"path":"https://rpkg.dev/swissmuni/reference/snapshots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get municipality snapshots — snapshots","text":"","code":"swissmuni::snapshots(historicized_code = TRUE) #> # A tibble: 2,314 × 29 #>    Identifier ValidFrom  ValidTo Level Parent Name_en    Name_fr Name_de Name_it ABBRE…¹ ABBRE…² ABBRE…³ ABBRE…⁴ ABBRE…⁵ CODE_…⁶ CODE_…⁷ CODE_…⁸ CODE_…⁹ CODE_…˟ #>         <int> <date>     <date>  <int>  <int> <chr>      <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1          1 1848-09-12 NA          1     NA Zürich     Zürich  Zürich  Zürich  ZH      ZH      ZH      ZH      ZH      1       1       1       1       1       #>  2        101 1848-09-12 NA          2      1 Bezirk Af… Bezirk… Bezirk… Bezirk… Affolt… Affolt… Affolt… Affolt… Affolt… 10053   10053   10053   10053   10053   #>  3         13 1848-09-12 NA          3    101 Stallikon  Stalli… Stalli… Stalli… NA      NA      NA      NA      NA      10575   10575   10575   10575   10575   #>  4          2 1848-09-12 NA          3    101 Affoltern… Affolt… Affolt… Affolt… NA      NA      NA      NA      NA      11742   11742   11742   11742   11742   #>  5          3 1848-09-12 NA          3    101 Bonstetten Bonste… Bonste… Bonste… NA      NA      NA      NA      NA      11801   11801   11801   11801   11801   #>  6          4 1911-01-01 NA          3    101 Hausen am… Hausen… Hausen… Hausen… NA      NA      NA      NA      NA      11992   11992   11992   11992   11992   #>  7          5 1848-09-12 NA          3    101 Hedingen   Heding… Heding… Heding… NA      NA      NA      NA      NA      12249   12249   12249   12249   12249   #>  8          9 1848-09-12 NA          3    101 Mettmenst… Mettme… Mettme… Mettme… NA      NA      NA      NA      NA      12433   12433   12433   12433   12433   #>  9         10 1848-09-12 NA          3    101 Obfelden   Obfeld… Obfeld… Obfeld… NA      NA      NA      NA      NA      12497   12497   12497   12497   12497   #> 10          6 1911-01-01 NA          3    101 Kappel am… Kappel… Kappel… Kappel… NA      NA      NA      NA      NA      12671   12671   12671   12671   12671   #> # … with 2,304 more rows, 10 more variables: INSCRIPTION_1_Text_en <chr>, INSCRIPTION_1_Text_fr <chr>, INSCRIPTION_1_Text_de <chr>, #> #   INSCRIPTION_1_Text_it <chr>, INSCRIPTION_1_Text <chr>, REC_TYPE_1_Text_en <chr>, REC_TYPE_1_Text_fr <chr>, REC_TYPE_1_Text_de <chr>, #> #   REC_TYPE_1_Text_it <chr>, REC_TYPE_1_Text <chr>, and abbreviated variable names ¹​ABBREV_1_Text_en, ²​ABBREV_1_Text_fr, ³​ABBREV_1_Text_de, ⁴​ABBREV_1_Text_it, #> #   ⁵​ABBREV_1_Text, ⁶​CODE_HIST_1_Text_en, ⁷​CODE_HIST_1_Text_fr, ⁸​CODE_HIST_1_Text_de, ⁹​CODE_HIST_1_Text_it, ˟​CODE_HIST_1_Text"},{"path":"https://rpkg.dev/swissmuni/reference/swissmuni-package.html","id":null,"dir":"Reference","previous_headings":"","what":"swissmuni: Download Municipality Data from the Swiss Federal Statistical Office's Web Services — swissmuni-package","title":"swissmuni: Download Municipality Data from the Swiss Federal Statistical Office's Web Services — swissmuni-package","text":"swissmuni provides access Swiss municipality snapshots, congruences, mutations spatial classifications web services provided Swiss Federal Statistical Office (FSO). web services part FSO's Statistical Metadata System (SMS).","code":""},{"path":[]},{"path":"https://rpkg.dev/swissmuni/reference/swissmuni-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"swissmuni: Download Municipality Data from the Swiss Federal Statistical Office's Web Services — swissmuni-package","text":"Maintainer: Salim Brüggemann salim-b@pm.(ORCID)","code":""}]
